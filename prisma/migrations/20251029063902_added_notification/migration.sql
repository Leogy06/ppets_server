-- CreateTable
CREATE TABLE `department_table` (
    `ID` INTEGER NOT NULL AUTO_INCREMENT,
    `DEPARTMENT_NAME` TEXT NULL,
    `CODE` VARCHAR(50) NULL,
    `DESCRIPTION` TEXT NULL,
    `OFFICER` VARCHAR(250) NULL,
    `POSITION` VARCHAR(255) NULL,
    `ENTRY_DATE` DATETIME(0) NULL,

    INDEX `ID`(`ID`),
    PRIMARY KEY (`ID`)
) DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

-- CreateTable
CREATE TABLE `employee` (
    `ID` INTEGER NOT NULL AUTO_INCREMENT,
    `ID_NUMBER` INTEGER NULL,
    `FIRSTNAME` VARCHAR(255) NULL,
    `MIDDLENAME` VARCHAR(255) NULL,
    `LASTNAME` VARCHAR(255) NULL,
    `SUFFIX` VARCHAR(255) NULL,
    `DEPARTMENT_ID` INTEGER NULL,
    `CURRENT_DPT_ID` INTEGER NULL,
    `CREATED_BY` INTEGER NULL,
    `CREATED_WHEN` DATETIME(0) NULL,
    `UPDATED_BY` INTEGER NULL,
    `UPDATED_WHEN` DATETIME(0) NULL,
    `DELETED` TINYINT NULL,

    PRIMARY KEY (`ID`)
) DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

-- CreateTable
CREATE TABLE `users` (
    `id` INTEGER NOT NULL AUTO_INCREMENT,
    `emp_id` INTEGER NOT NULL,
    `password` VARCHAR(255) NOT NULL,
    `email` VARCHAR(255) NOT NULL,
    `role` INTEGER NOT NULL,
    `username` VARCHAR(45) NULL,
    `is_active` TINYINT NULL DEFAULT 1,
    `DEPARTMENT_USER` INTEGER NULL,

    UNIQUE INDEX `users_email_key`(`email`),
    UNIQUE INDEX `users_username_key`(`username`),
    INDEX `emp_id`(`emp_id`),
    PRIMARY KEY (`id`)
) DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

-- CreateTable
CREATE TABLE `items` (
    `ID` INTEGER NOT NULL AUTO_INCREMENT,
    `ITEM_NAME` VARCHAR(45) NOT NULL,
    `DESCRIPTION` TEXT NOT NULL,
    `UNIT_VALUE` DECIMAL(10, 2) NOT NULL,
    `QUANTITY` INTEGER NOT NULL,
    `RECEIVED_AT` DATETIME(0) NOT NULL,
    `PIS_NO` VARCHAR(45) NULL,
    `PROP_NO` VARCHAR(45) NULL,
    `SERIAL_NO` VARCHAR(45) NULL,
    `ICS_NO` VARCHAR(45) NULL,
    `DEPARTMENT_ID` INTEGER NULL,
    `REMARKS` TEXT NULL,
    `DELETE` TINYINT NOT NULL DEFAULT 0,
    `PAR_NO` VARCHAR(45) NULL,
    `MR_NO` VARCHAR(45) NULL,
    `ACCOUNT_CODE` INTEGER NULL,
    `ADDED_BY` INTEGER NULL,
    `createdAt` TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP(0),
    `updatedAt` TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP(0),
    `condition` ENUM('EXCELLENT', 'GOOD', 'FAIR', 'POOR', 'REPAIR', 'MAINTENANCE') NOT NULL DEFAULT 'EXCELLENT',

    UNIQUE INDEX `ID`(`ID`),
    INDEX `items_ITEM_NAME_idx`(`ITEM_NAME`),
    INDEX `items_DELETE_idx`(`DELETE`),
    INDEX `items_ACCOUNT_CODE_idx`(`ACCOUNT_CODE`),
    INDEX `items_DEPARTMENT_ID_idx`(`DEPARTMENT_ID`),
    PRIMARY KEY (`ID`)
) DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

-- CreateTable
CREATE TABLE `account_item_tbl` (
    `ID` INTEGER NOT NULL AUTO_INCREMENT,
    `ACCOUNT_CODE` VARCHAR(45) NOT NULL,
    `ACCOUNT_TITLE` VARCHAR(90) NOT NULL,
    `createdAt` DATETIME(0) NULL DEFAULT CURRENT_TIMESTAMP(0),
    `updatedAt` DATETIME(0) NULL DEFAULT CURRENT_TIMESTAMP(0),
    `DELETED` TINYINT NULL DEFAULT 0,

    UNIQUE INDEX `ID_UNIQUE`(`ID`),
    PRIMARY KEY (`ID`)
) DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

-- CreateTable
CREATE TABLE `Transaction` (
    `id` VARCHAR(191) NOT NULL,
    `status` ENUM('APPROVED', 'PENDING', 'REJECTED', 'CANCEL') NOT NULL DEFAULT 'PENDING',
    `reason` VARCHAR(255) NOT NULL,
    `employeeId` INTEGER NOT NULL,
    `itemId` INTEGER NOT NULL,
    `quantity` INTEGER NOT NULL,
    `reviewedAt` DATETIME(3) NULL,
    `createdAt` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
    `updatedAt` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
    `updatedBy` INTEGER NULL,

    PRIMARY KEY (`id`)
) DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

-- CreateTable
CREATE TABLE `Notification` (
    `id` VARCHAR(191) NOT NULL,
    `read` ENUM('READ', 'UNREAD') NOT NULL DEFAULT 'UNREAD',
    `readAt` DATETIME(3) NULL,
    `createadAt` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),

    PRIMARY KEY (`id`)
) DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

-- AddForeignKey
ALTER TABLE `users` ADD CONSTRAINT `users_ibfk_1` FOREIGN KEY (`emp_id`) REFERENCES `employee`(`ID`) ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE `Transaction` ADD CONSTRAINT `Transaction_employeeId_fkey` FOREIGN KEY (`employeeId`) REFERENCES `employee`(`ID`) ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE `Transaction` ADD CONSTRAINT `Transaction_itemId_fkey` FOREIGN KEY (`itemId`) REFERENCES `items`(`ID`) ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE `Transaction` ADD CONSTRAINT `Transaction_updatedBy_fkey` FOREIGN KEY (`updatedBy`) REFERENCES `users`(`id`) ON DELETE SET NULL ON UPDATE CASCADE;
